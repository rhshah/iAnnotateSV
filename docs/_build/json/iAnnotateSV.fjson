{"body": "<div class=\"section\" id=\"iannotatesv-package\">\n<h1>iAnnotateSV package<a class=\"headerlink\" href=\"#iannotatesv-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n</div>\n<div class=\"section\" id=\"required-packages\">\n<h1>Required Packages<a class=\"headerlink\" href=\"#required-packages\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>We require that you install:</p>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">pandas:</th><td class=\"field-body\"><a class=\"reference external\" href=\"http://pandas.pydata.org/\">v0.16.2</a></td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">biopython:</th><td class=\"field-body\"><a class=\"reference external\" href=\"http://biopython.org/wiki/Main_Page\">v1.65</a></td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">Pillow:</th><td class=\"field-body\"><a class=\"reference external\" href=\"https://pypi.python.org/pypi/Pillow/3.4.2\">v3.4.2</a></td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">reportlab:</th><td class=\"field-body\"><a class=\"reference external\" href=\"https://pypi.python.org/pypi/reportlab/3.3.0\">v3.3.0</a></td>\n</tr>\n<tr class=\"field-odd field\"><th class=\"field-name\">coloredlogs:</th><td class=\"field-body\"><a class=\"reference external\" href=\"https://pypi.python.org/pypi/coloredlogs\">v5.2</a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"quick-usage\">\n<h1>Quick Usage<a class=\"headerlink\" href=\"#quick-usage\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>If you know python I have created a small test script in /iAnnotateSV/test directory it runs a test on existing code and compares the result with the output file.</p>\n<dl class=\"docutils\">\n<dt>Else To Run:</dt>\n<dd><ul class=\"first simple\">\n<li>If you want to run with default options:</li>\n</ul>\n<p><code class=\"docutils literal\"><span class=\"pre\">python</span> <span class=\"pre\">iAnnotateSV.py</span> <span class=\"pre\">-i</span> <span class=\"pre\">svFile.txt</span> <span class=\"pre\">-ofp</span> <span class=\"pre\">outputfilePrefix</span> <span class=\"pre\">-o</span> <span class=\"pre\">/path/to/output/dir</span> <span class=\"pre\">-r</span> <span class=\"pre\">hg19</span> <span class=\"pre\">-d</span> <span class=\"pre\">3000</span></code></p>\n<ul class=\"simple\">\n<li>If you want to run with your own transcripts:</li>\n</ul>\n<p><code class=\"docutils literal\"><span class=\"pre\">python</span> <span class=\"pre\">iAnnotateSV.py</span> <span class=\"pre\">-i</span> <span class=\"pre\">svFile.txt</span> <span class=\"pre\">-ofp</span> <span class=\"pre\">outputfilePrefix</span> <span class=\"pre\">-o</span> <span class=\"pre\">/path/to/output/dir</span> <span class=\"pre\">-r</span> <span class=\"pre\">hg19</span> <span class=\"pre\">-d</span> <span class=\"pre\">3000</span> <span class=\"pre\">-c</span> <span class=\"pre\">canonicalTranscripts.txt</span></code></p>\n<ul class=\"simple\">\n<li>If you want to run with your own transcripts &amp; make plots:</li>\n</ul>\n<p class=\"last\"><code class=\"docutils literal\"><span class=\"pre\">python</span> <span class=\"pre\">iAnnotateSV.py</span> <span class=\"pre\">-i</span> <span class=\"pre\">svFile.txt</span> <span class=\"pre\">-ofp</span> <span class=\"pre\">outputfilePrefix</span> <span class=\"pre\">-o</span> <span class=\"pre\">/path/to/output/dir</span> <span class=\"pre\">-r</span> <span class=\"pre\">hg19</span> <span class=\"pre\">-d</span> <span class=\"pre\">3000</span> <span class=\"pre\">-c</span> <span class=\"pre\">canonicalTranscripts.txt</span> <span class=\"pre\">-u</span> <span class=\"pre\">uniprot.txt</span> <span class=\"pre\">-p</span></code></p>\n</dd>\n</dl>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span></span>usage: iAnnotateSV.py <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\n**Annotate SV based on a specific human reference**\n\n**optional arguments:**\n    -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n    -v, --verbose         make lots of noise <span class=\"o\">[</span>default<span class=\"o\">]</span>\n    -r hg19, --refFileVersion hg19\n                        Which human reference file to be used, hg18,hg19 or\n                        hg38\n    -ofp test, --outputFilePrefix <span class=\"nb\">test</span>\n                        Prefix <span class=\"k\">for</span> the output file\n    -o /somedir, --outputDir /somedir\n                        Full Path to the output dir\n    -i svfile.txt, --svFile svfile.txt\n                        Location of the structural variants file to annotate\n    -d <span class=\"m\">3000</span>, --distance <span class=\"m\">3000</span>\n                        Distance used to extend the promoter region\n    -a, --autoSelect      Auto Select which transcript to be used<span class=\"o\">[</span>default<span class=\"o\">]</span>\n    -c canonicalExons.txt, --canonicalTranscripts canonicalExons.txt\n                        Location of canonical transcript list <span class=\"k\">for</span> each gene.\n                        Use only <span class=\"k\">if</span> you want the output <span class=\"k\">for</span> specific\n                        transcripts <span class=\"k\">for</span> each gene.\n    -p, --plotSV          Plot the structural variant in question<span class=\"o\">[</span>default<span class=\"o\">]</span>\n    -u uniprot.txt, --uniprotFile uniprot.txt\n                        Location of UniProt list contain information <span class=\"k\">for</span>\n                        protein domains. Use only <span class=\"k\">if</span> you want to plot the\n                        structural variant\n    -rr RepeatRegionFile.tsv, --repeatFile RepeatRegionFile.tsv\n                        Location of the Repeat Region Bed File\n    -dgv DGvFile.tsv, --dgvFile DGvFile.tsv\n                        Location of the Database of Genomic Variants Bed File\n    -cc CosmicConsensus.tsv, --cosmicConsensusFile CosmicConsensus.tsv\n                        Location of the Cosmic Consensus TSV file\n    -cct CosmicFusionCounts.tsv, --cosmicCountsFile CosmicConsensus.tsv\n                        Location of the Cosmic Fusion Counts TSV file\n</pre></div>\n</div>\n<p>Input file format is a tab-delimited file containing:</p>\n<p>chr1  pos1  str1  chr2  pos2  str2</p>\n<p>as the header and where:</p>\n<ul class=\"simple\">\n<li><strong>chr1:</strong> Its the chromosome name for first break point [1,2,3,4,5,6,7 etc..],</li>\n<li><strong>pos1:</strong> Its the chromosome loaction for first break point [1-based],</li>\n<li><strong>str1:</strong> Its the read direction for the first break point [0=top/plus/reference, 1=bottom/minus/complement],</li>\n<li><strong>chr2:</strong> Its the chromosome name for second break point [1,2,3,4,5,6,7 etc..],</li>\n<li><strong>pos2:</strong> Its the chromosome loaction for second break point [1-based],</li>\n<li><strong>str2:</strong> Its the read direction for the second break point [0=top/plus/reference, 1=bottom/minus/complement],</li>\n</ul>\n<p>Output file will is a tab-delimited file containing:</p>\n<p>chr1  pos1  str1  chr2  pos2  str2  gene1 transcript1 site1 gene2 transcript2 site2 fusion</p>\n<p>as the header and where:</p>\n<ul class=\"simple\">\n<li><strong>chr1</strong> : Its the chromosome name for first break point [1,2,3,4,5,6,7 etc..],</li>\n<li><strong>pos1</strong> : Its the chromosome loaction for first break point [1-based],</li>\n<li><strong>str1</strong> : Its the read direction for the first break point [0=top/plus/reference, 1=bottom/minus/complement],</li>\n<li><strong>chr2</strong> : Its the chromosome name for second break point [1,2,3,4,5,6,7 etc..],</li>\n<li><strong>pos2</strong> : Its the chromosome loaction for second break point [1-based],</li>\n<li><strong>str2</strong> : Its the read direction for the second break point [0=top/plus/reference, 1=bottom/minus/complement],</li>\n<li><strong>gene1</strong> : Gene for the first break point,</li>\n<li><strong>transcript1</strong> : Transcript used for the first breakpoint,</li>\n<li><strong>site1</strong> : Explanation of the site where the first breakpoint occurs [Example=&gt;Intron of EWSR1(+):126bp after exon 10],</li>\n<li><strong>kinasedomain1</strong> : Explanation of the site where the first breapoint involves a Kinase Domain or not[Example=&gt;Partial Kinase Domain Included]</li>\n<li><strong>gene2</strong> : Gene for the second break point,</li>\n<li><strong>transcript2</strong> : Transcript used for the second breakpoint,</li>\n<li><strong>site2</strong> : Explanation of the site where the second breakpoint occurs [Example=&gt;Intron of ERG(-):393bp after exon 4],</li>\n<li><strong>kinasedomain2</strong> : Explanation of the site where the second breapoint involves a Kinase Domain or not[Example=&gt;Partial Kinase Domain Included]</li>\n<li><strong>fusion</strong> : Explanation if the evnet leads to fusion or not. [Example=&gt;Protein Fusion: in frame  {EWSR1:ERG}]</li>\n<li><strong>Cosmic_Fusion_Counts</strong> : Number of Counts for the Events from Cosmic Fusion Results</li>\n<li><strong>repName-repClass-repFamily:-site1</strong> : Repeat Region Annotation for site 1</li>\n<li><strong>repName-repClass-repFamily:-site2</strong> : Repeat Region Annotation for site 2</li>\n<li><strong>CC_Chr_Band</strong> : Cosmic Cancer Census Chromosome Band</li>\n<li><strong>CC_Tumour_Types(Somatic)</strong> : Cosmic Cancer Census Tumor Type in Somatic Samples</li>\n<li><strong>CC_Cancer_Syndrome</strong> : Cosmic Cancer Census Cancer Syndrome the genes are related to.</li>\n<li><strong>CC_Mutation_Type</strong> : Cosmic Cancer Census Mutation Types the Genes are related to.</li>\n<li><strong>CC_Translocation_Partner</strong> : Cosmic Cancer Census Translocation Partners for the gene.</li>\n<li><strong>DGv_Name-DGv_VarType-site1</strong> : Database of Genomic Variants annotation for site 1</li>\n<li><strong>DGv_Name-DGv_VarType-site</strong> : Database of Genomic Variants annotation for site 2</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example Plot:</th><td class=\"field-body\"><a class=\"first last reference internal image-reference\" href=\"../_images/EWSR1-chr22_29688289_ERG-chr21_39775034_Translocation.jpg\"><img alt=\"Image of EWSR1-ERG Fusion\" class=\"align-center\" src=\"../_images/EWSR1-chr22_29688289_ERG-chr21_39775034_Translocation.jpg\" style=\"width: 300.0px; height: 300.0px;\" /></a>\n</td>\n</tr>\n</tbody>\n</table>\n<p>The above plot shows the following:</p>\n<ul class=\"simple\">\n<li>There are three tracks for each break point. The first three tracks belong to breakpoint 1 and second three tracks belong to breakpoint 2.</li>\n<li><dl class=\"first docutils\">\n<dt>Thre three tracks are:</dt>\n<dd><ul class=\"first last\">\n<li><dl class=\"first docutils\">\n<dt>Gene Model Track:</dt>\n<dd><ul class=\"first last\">\n<li>Displays <strong>Exons</strong> as <strong>brown</strong> and there direction with exons in arrow formation.</li>\n<li>In <strong>orange</strong> it displays the <strong>breakpoint description</strong>.</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Alignment Track:</dt>\n<dd><ul class=\"first last\">\n<li>Displays the direction of the reads for the breakpoint. Also displays the <strong>co-ordinate</strong> in <strong>Purple.</strong></li>\n<li>Read in <strong>Positive</strong> direction are <strong>Blue</strong> and <strong>Negative</strong> direction are <strong>Red</strong></li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl class=\"first docutils\">\n<dt>Protein Domain Track:</dt>\n<dd><ul class=\"first last\">\n<li>Displays the <strong>Protein Domain</strong> as <strong>green boxes</strong> with there names in green.</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n<p>Output file name for plot is Gene1-Chromosome1_Position1_Gene2-Chromosome2_Position2_EventType.jpg\nAll the Outputs are written into a folder called <strong>iAnnotateSVplots</strong> in the given output directory</p>\n<p>Please look at examples of input  and output files in /data/test directory where:\n/data/test/testData.txt is the input file\n/data/test/testResult.txt is the output file</p>\n<p>The refFileVersion are automaticslly chosen from /data/references. <strong>But caution this is only tested on hg19</strong>. All these files are created using UCSC table browser.</p>\n<p>The example for canonical transcripts can be also found in /data/canonicalInfo. In general the file is tab-delimited containing:</p>\n<p>Gene  Transcripts</p>\n<p>as the headers where:</p>\n<ul class=\"simple\">\n<li><strong>Gene</strong> : Gene symobol should match the gene name from  /data/references file.</li>\n<li><strong>Transcripts</strong> : Transcripts is a particular transcript that you are interested in using instead of auto-selection.</li>\n</ul>\n<p>The file for hg19 uniprot is created using UCSC table browser (Uniprot spAnnot track). The file for hg19 is in /data/UcscUniprotdomainInfo</p>\n<div class=\"section\" id=\"module-iannotatesv-contents\">\n<h2>Module <code class=\"docutils literal\"><span class=\"pre\">iAnnotateSV</span></code> contents<a class=\"headerlink\" href=\"#module-iannotatesv-contents\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n</div>\n<div class=\"section\" id=\"annotateeachbreakpoint-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">AnnotateEachBreakpoint</span></code> module<a class=\"headerlink\" href=\"#annotateeachbreakpoint-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will annotate each breakpoint taking in:</dt>\n<dd><ul class=\"first simple\">\n<li><strong>chr</strong> : chromosome for the event,</li>\n<li><strong>pos</strong> : position in the chromosome for the event,</li>\n<li><strong>str</strong> : direction of the reads for the event[either 0 or 1],</li>\n<li><strong>referenceDataframe</strong> : a pandas data-frame that will store reference information</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateEachBreakpoint(chr1,pos1,str1,refDF)</span></code></td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"findatranscript-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">FindATranscript</span></code> module<a class=\"headerlink\" href=\"#findatranscript-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will automatically find the highest preference transcript based on input:</dt>\n<dd><ul class=\"first simple\">\n<li><dl class=\"first docutils\">\n<dt><strong>queryDF</strong> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">Its a dataframe with</span></dt>\n<dd><ul class=\"first last\">\n<li><strong>c</strong> = zone: 1=exon, 2=intron, 3=3\u2019-UTR, 4=5\u2019-UTR, 5=promoter</li>\n<li><strong>d,e</strong> = for exons: which one, and how far</li>\n<li><strong>d1,d2,e1,e2</strong> = for introns: between which exons and how far?</li>\n<li><strong>f</strong> = for introns: how many bases in the partially completed codon?,</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><strong>referenceDataframe</strong> : a pandas data-frame that will store reference information</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">FindATranscript(queryDF,refDF)</span></code></td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"findalltranscripts-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">FindAllTranscripts</span></code> module<a class=\"headerlink\" href=\"#findalltranscripts-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will find all transcripts based on input:</dt>\n<dd><ul class=\"first simple\">\n<li><dl class=\"first docutils\">\n<dt><strong>queryDF</strong> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">Its a dataframe with</span></dt>\n<dd><ul class=\"first last\">\n<li><strong>c</strong> = zone: 1=exon, 2=intron, 3=3\u2019-UTR, 4=5\u2019-UTR, 5=promoter</li>\n<li><strong>d,e</strong> = for exons: which one, and how far</li>\n<li><strong>d1,d2,e1,e2</strong> = for introns: between which exons and how far?</li>\n<li><strong>f</strong> = for introns: how many bases in the partially completed codon?,</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><strong>referenceDataframe</strong> : a pandas data-frame that will store reference information</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">FindAllTranscripts(queryDF,refDF)</span></code></td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"findcanonicaltranscript-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">FindCanonicalTranscript</span></code> module<a class=\"headerlink\" href=\"#findcanonicaltranscript-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will Finad a canonical transcript based on the input for main function and output of FindAllTranscripts:</dt>\n<dd><ul class=\"first simple\">\n<li><strong>geneList</strong> : List of genes [this will normally be list with same names] for the Structural Variant in question,</li>\n<li><strong>transcriptList</strong> : List of transcripts for the Structural Variant in question,</li>\n<li><strong>siteList</strong> : direction of the site for the event[either 0 or 1],</li>\n<li><strong>zoneList</strong> : different zones in which the event can occur [zone: 1=exon, 2=intron, 3=3\u2019-UTR, 4=5\u2019-UTR, 5=promoter]</li>\n<li><strong>strandList</strong> : direction of the read for the event[either 0 or 1],</li>\n<li><strong>intronnumList</strong> : Which intron the event occurs if the event is in intron for each transcript,</li>\n<li><strong>intronframeList</strong> : What is the frame of the intron where the event is occuring for each transcript.</li>\n<li><strong>ctDict</strong> : a dictionary containing the canonical transcript information for each gene. [Gene=&gt;Transcript]</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">FindCT(geneList,transcriptList,siteList,zoneList,strandList,intronnumList,intronframeList,ctDict)</span></code></td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"predictfunction-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">PredictFunction</span></code> module<a class=\"headerlink\" href=\"#predictfunction-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><p class=\"first\">This module will predict the function of each annotated breakpoint</p>\n</li>\n<li><dl class=\"first docutils\">\n<dt>It takes two pandas series which has following information:</dt>\n<dd><ul class=\"first simple\">\n<li><strong>gene</strong> : Gene for the event,</li>\n<li><strong>transcript</strong> : Transcript used for the event,</li>\n<li><strong>site</strong> : Explanation for site where the event occurs,</li>\n<li><strong>zone</strong> : Where does the event occur [ 1=exon, 2=intron, 3=3\u2019-UTR, 4=5\u2019-UTR, 5=promoter ],</li>\n<li><strong>strand</strong> : Direction of the transcript,</li>\n<li><strong>str</strong> : Direction of the read,</li>\n<li><strong>intronnum</strong> : Which intron the event occurs if the event is in intron,</li>\n<li><strong>intronframe</strong> : What is the frame of the intron where the event is occuring.</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><p class=\"first\"><code class=\"docutils literal\"><span class=\"pre\">ann1S</span> <span class=\"pre\">=</span> <span class=\"pre\">pandas.Series([gene1,transcript1,site1,zone1,strand1,str1,intronnum1,intronframe1],index=['gene1',</span> <span class=\"pre\">'transcript1',</span> <span class=\"pre\">'site1',</span> <span class=\"pre\">'zone1',</span> <span class=\"pre\">'txstrand1',</span> <span class=\"pre\">'readstrand1',</span> <span class=\"pre\">'intronnum1','intronframe1'])</span></code></p>\n<p><code class=\"docutils literal\"><span class=\"pre\">ann2S</span> <span class=\"pre\">=</span> <span class=\"pre\">pandas.Series([gene2,transcript2,site2,zone2,strand2,str2,intronnum2,intronframe2],index=['gene2',</span> <span class=\"pre\">'transcript2',</span> <span class=\"pre\">'site2',</span> <span class=\"pre\">'zone2',</span> <span class=\"pre\">'txstrand2',</span> <span class=\"pre\">'readstrand2',</span> <span class=\"pre\">'intronnum2','intronframe2'])</span></code></p>\n<p>So <strong>ann1S</strong> &amp; <strong>ann2S</strong> are series that will go to PredictFuntionForSV()</p>\n<p class=\"last\"><code class=\"docutils literal\"><span class=\"pre\">PredictFunctionForSV(ann1S,ann2S)</span></code></p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"addexternalannotations-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">AddExternalAnnotations</span></code> module<a class=\"headerlink\" href=\"#addexternalannotations-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will annotate each breakpoint for Repeat Region, Database of Genomic Variants and Cosmic Census taking in:</dt>\n<dd><ul class=\"first simple\">\n<li><strong>repeat region file</strong> : Repeat Track from UCSC in tab-delimited format (see: <code class=\"docutils literal\"><span class=\"pre\">/data/repeat_region/hg19_repeatRegion.tsv</span></code>),</li>\n<li><strong>data base of genimic variant file</strong> : DGv in tab-delimited format (see: <code class=\"docutils literal\"><span class=\"pre\">/data/database_of_genomic_variants/hg19_DGv_Annotation.tsv</span></code>),</li>\n<li><strong>cosmic census file</strong> : cosmic census file from sanger (see: <code class=\"docutils literal\"><span class=\"pre\">/data/cosmic/cancer_gene_census.tsv</span></code>),</li>\n<li><strong>cosmic fusion counts file</strong> : cosmic fusion counts file from from cosmic fusion export (see: <code class=\"docutils literal\"><span class=\"pre\">/data/cosmic/cosmic_fusion_counts.tsv</span></code>),</li>\n<li><strong>structural variants file</strong> : File containing the breakpoint information,</li>\n<li><strong>output prefix</strong> : Output Prefix for the output files (.xlsx,.json,.txt),</li>\n<li><strong>output directory</strong> : Directory where the output needs to be written</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><p class=\"first\"><code class=\"docutils literal\"><span class=\"pre\">makeCommandLineForAEA</span> <span class=\"pre\">=</span> <span class=\"pre\">&quot;-r</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">repeatregionFilePath</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-d</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">dgvFilePath</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-c</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">ccFilePath</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-cct</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">cctFilePath</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-s</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">svFilePath</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-ofp</span> <span class=\"pre\">AnnotatedSV&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">-o</span> <span class=\"pre\">&quot;</span> <span class=\"pre\">+</span> <span class=\"pre\">outputDir</span></code></p>\n<p class=\"last\"><code class=\"docutils literal\"><span class=\"pre\">AddExternalAnnotations.main(makeCommandLineForAEA)</span></code></p>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"annotateforrepeatregion-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">AnnotateForRepeatRegion</span></code> module<a class=\"headerlink\" href=\"#annotateforrepeatregion-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module has two submodules will read and annotate each breakpoint for Repeat Region</dt>\n<dd><ol class=\"first last arabic\">\n<li><p class=\"first\"><strong>ReadRepeatFile</strong></p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>This will read a tab-delimited file into a panadas dataframe</li>\n</ul>\n</div></blockquote>\n</li>\n<li><p class=\"first\"><strong>AnnotateRepeatRegion</strong></p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>This is will annotate the breakpoints for repeat region.</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateRepeatRegion(verbose,</span> <span class=\"pre\">count,</span> <span class=\"pre\">svObject,</span> <span class=\"pre\">repeatregionDict)</span></code></td>\n</tr>\n</tbody>\n</table>\n</div></blockquote>\n</li>\n</ol>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"annotatefordgv-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">AnnotateForDGv</span></code> module<a class=\"headerlink\" href=\"#annotatefordgv-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module has two submodules will read and annotate each breakpoint for Database of Genomic Variants</dt>\n<dd><ol class=\"first last arabic\">\n<li><p class=\"first\"><strong>ReadDGv</strong></p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>This will read a tab-delimited file into a panadas dataframe</li>\n</ul>\n</div></blockquote>\n</li>\n<li><p class=\"first\"><strong>AnnotateDGv</strong></p>\n<blockquote>\n<div><ul class=\"simple\">\n<li>This is will annotate the breakpoints for Database of Genomic Variants.</li>\n</ul>\n<table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateDGv(verbose,</span> <span class=\"pre\">count,</span> <span class=\"pre\">svObject,</span> <span class=\"pre\">dgvDict)</span></code></td>\n</tr>\n</tbody>\n</table>\n</div></blockquote>\n</li>\n</ol>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"annotateforcosmic-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">AnnotateForCosmic</span></code> module<a class=\"headerlink\" href=\"#annotateforcosmic-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><p class=\"first\">This module will annotate each breakpoint for Cosmic Census</p>\n<blockquote>\n<div><table class=\"docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateFromCosmicCensusFile(comic_census_filename,</span> <span class=\"pre\">verbose,</span> <span class=\"pre\">count,</span> <span class=\"pre\">svObject)</span></code></td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateFromComicFusionCountsFile(comic_fusion_counts_filename,</span> <span class=\"pre\">verbose,</span> <span class=\"pre\">count,</span> <span class=\"pre\">svObject)</span></code></td>\n</tr>\n</tbody>\n</table>\n</div></blockquote>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"helper-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">helper</span></code> module<a class=\"headerlink\" href=\"#helper-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li><dl class=\"first docutils\">\n<dt>This module has multiple submodules</dt>\n<dd><ol class=\"first last arabic\">\n<li><strong>ReadFile()</strong><ul>\n<li>This will read a tab-delimited file into a panadas dataframe</li>\n</ul>\n</li>\n<li><strong>ExtendPromoterRegion()</strong><ul>\n<li>This will extend the promoter region to a given length</li>\n</ul>\n</li>\n<li><strong>bp2str()</strong><ul>\n<li>This will convert base pair information to string information</li>\n</ul>\n</li>\n</ol>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"visualizesv-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">VisualizeSV</span></code> module<a class=\"headerlink\" href=\"#visualizesv-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul>\n<li><dl class=\"first docutils\">\n<dt>This module will annotate each breakpoint taking in:</dt>\n<dd><ul class=\"first simple\">\n<li><strong>svDataFrame</strong> : Annotated structurla varaints dataframe obtained from PredictFuntion Module,</li>\n<li><strong>referenceDataFrame</strong> : a pandas data-frame that will store reference information,</li>\n<li><strong>uniprotDataFrame</strong> : making a dataframe from the uniprot data.</li>\n<li><strong>args</strong> : This has all the arguments that are generated from iAnnotateSV module</li>\n</ul>\n<table class=\"last docutils field-list\" frame=\"void\" rules=\"none\">\n<col class=\"field-name\" />\n<col class=\"field-body\" />\n<tbody valign=\"top\">\n<tr class=\"field-odd field\"><th class=\"field-name\">Example:</th><td class=\"field-body\"><p class=\"first\"><code class=\"docutils literal\"><span class=\"pre\">VisualizeSV(svDataFrame,referenceDataFrame,uniprotDataFrame,args)</span></code></p>\n</td>\n</tr>\n<tr class=\"field-even field\"><th class=\"field-name\">Example Plot:</th><td class=\"field-body\"><a class=\"first last reference internal image-reference\" href=\"../_images/EWSR1-chr22_29688289_ERG-chr21_39775034_Translocation.jpg\"><img alt=\"Image of EWSR1-ERG Fusion\" class=\"align-center\" src=\"../_images/EWSR1-chr22_29688289_ERG-chr21_39775034_Translocation.jpg\" style=\"width: 300.0px; height: 300.0px;\" /></a>\n</td>\n</tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div class=\"section\" id=\"iannotatesv-module\">\n<h2><code class=\"docutils literal\"><span class=\"pre\">iAnnotateSV</span></code> module<a class=\"headerlink\" href=\"#iannotatesv-module\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ul class=\"simple\">\n<li>This module is the driver module, it takes user information and runs all other module to produce proper structural variant annotation</li>\n</ul>\n<div class=\"highlight-bash\"><div class=\"highlight\"><pre><span></span>usage: iAnnotateSV.py <span class=\"o\">[</span>options<span class=\"o\">]</span>**\n\nAnnotate SV based on a specific human reference**\n\noptional arguments:**\n-h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n-v, --verbose         make lots of noise <span class=\"o\">[</span>default<span class=\"o\">]</span>\n-r hg19, --refFileVersion hg19\n                        Which human reference file to be used, hg18,hg19 or\n                        hg38\n-ofp test, --outputFilePrefix <span class=\"nb\">test</span>\n                        Prefix <span class=\"k\">for</span> the output file\n-o /somedir, --outputDir /somedir\n                        Full Path to the output dir\n-i svfile.txt, --svFile svfile.txt\n                        Location of the structural variants file to annotate\n-d <span class=\"m\">3000</span>, --distance <span class=\"m\">3000</span>\n                        Distance used to extend the promoter region\n-a, --autoSelect      Auto Select which transcript to be used<span class=\"o\">[</span>default<span class=\"o\">]</span>\n-c canonicalExons.txt, --canonicalTranscripts canonicalExons.txt\n                        Location of canonical transcript list <span class=\"k\">for</span> each gene.\n                        Use only <span class=\"k\">if</span> you want the output <span class=\"k\">for</span> specific\n                        transcripts <span class=\"k\">for</span> each gene.\n-p, --plotSV          Plot the structural variant in question<span class=\"o\">[</span>default<span class=\"o\">]</span>\n-u uniprot.txt, --uniprotFile uniprot.txt\n                        Location of UniProt list contain information <span class=\"k\">for</span>\n                        protein domains. Use only <span class=\"k\">if</span> you want to plot the\n                        structural variant\n-rr RepeatRegionFile.tsv, --repeatFile RepeatRegionFile.tsv\n                        Location of the Repeat Region Bed File\n-dgv DGvFile.tsv, --dgvFile DGvFile.tsv\n                        Location of the Database of Genomic Variants Bed File\n-cc CosmicConsensus.tsv, --cosmicConsensusFile CosmicConsensus.tsv\n                        Location of the Cosmic Consensus TSV file\n-cct CosmicFusionCounts.tsv, --cosmicCountsFile CosmicConsensus.tsv\n                        Location of the Cosmic Fusion Counts TSV file\n</pre></div>\n</div>\n</div>\n</div>\n", "alabaster_version": "0.7.10", "display_toc": true, "title": "iAnnotateSV package", "sourcename": "iAnnotateSV.rst.txt", "customsidebar": null, "metatags": "", "current_page_name": "iAnnotateSV", "next": null, "rellinks": [["genindex", "General Index", "I", "index"], ["modules", "iAnnotateSV", "P", "previous"]], "meta": {}, "parents": [{"link": "../modules/", "title": "iAnnotateSV"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">iAnnotateSV package</a></li>\n<li><a class=\"reference internal\" href=\"#required-packages\">Required Packages</a></li>\n<li><a class=\"reference internal\" href=\"#quick-usage\">Quick Usage</a><ul>\n<li><a class=\"reference internal\" href=\"#module-iannotatesv-contents\">Module <code class=\"docutils literal\"><span class=\"pre\">iAnnotateSV</span></code> contents</a></li>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#annotateeachbreakpoint-module\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateEachBreakpoint</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#findatranscript-module\"><code class=\"docutils literal\"><span class=\"pre\">FindATranscript</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#findalltranscripts-module\"><code class=\"docutils literal\"><span class=\"pre\">FindAllTranscripts</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#findcanonicaltranscript-module\"><code class=\"docutils literal\"><span class=\"pre\">FindCanonicalTranscript</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#predictfunction-module\"><code class=\"docutils literal\"><span class=\"pre\">PredictFunction</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#addexternalannotations-module\"><code class=\"docutils literal\"><span class=\"pre\">AddExternalAnnotations</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#annotateforrepeatregion-module\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateForRepeatRegion</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#annotatefordgv-module\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateForDGv</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#annotateforcosmic-module\"><code class=\"docutils literal\"><span class=\"pre\">AnnotateForCosmic</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#helper-module\"><code class=\"docutils literal\"><span class=\"pre\">helper</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#visualizesv-module\"><code class=\"docutils literal\"><span class=\"pre\">VisualizeSV</span></code> module</a></li>\n<li><a class=\"reference internal\" href=\"#iannotatesv-module\"><code class=\"docutils literal\"><span class=\"pre\">iAnnotateSV</span></code> module</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../modules/", "title": "iAnnotateSV"}, "page_source_suffix": ".rst"}